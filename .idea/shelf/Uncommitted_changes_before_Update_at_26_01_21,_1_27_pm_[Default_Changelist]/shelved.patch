Index: data/albumDetails.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/data/albumDetails.ts b/data/albumDetails.ts
--- a/data/albumDetails.ts	(revision 77c7f1c0864b0cc0d2026967db41e1d8235ea3c5)
+++ b/data/albumDetails.ts	(date 1611647697578)
@@ -1,0 +1,29 @@
+export default {
+    id: '11',
+    name: 'Good vibes',
+    by: 'Spotify',
+    numberOfLikes: 38,
+    imageUri: 'https://cache.boston.com/resize/bonzai-fba/Globe_Photo/2011/04/14/1302796985_4480/539w.jpg',
+    artistsHeadline: 'Taylor Swift, Kygo Objective C, Avicii',
+    songs: [{
+        id: '1',
+        imageUri: 'https://cache.boston.com/resize/bonzai-fba/Globe_Photo/2011/04/14/1302796985_4480/539w.jpg',
+        title: 'High on You',
+        artist: 'Helen'
+    },{
+        id: '2',
+        imageUri: 'https://cdn6.f-cdn.com/contestentries/1485199/27006121/5ca3e39ced7f1_thumb900.jpg',
+        title: 'Lorem Ipsum',
+        artist: 'Artist 2'
+    },{
+        id: '3',
+        imageUri: 'https://images-na.ssl-images-amazon.com/images/I/61F66QURFyL.jpg',
+        title: 'Hello from the other side',
+        artist: 'Helen'
+    },{
+        id: '4',
+        imageUri: 'https://i.pinimg.com/originals/a2/0d/37/a20d37791f8ad5cd54734cd3af559cc9.jpg',
+        title: 'High on You',
+        artist: 'Helen'
+    },]
+}
Index: screens/AlbumScreen.tsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/screens/AlbumScreen.tsx b/screens/AlbumScreen.tsx
--- a/screens/AlbumScreen.tsx	(revision 77c7f1c0864b0cc0d2026967db41e1d8235ea3c5)
+++ b/screens/AlbumScreen.tsx	(date 1611647556450)
@@ -1,0 +1,28 @@
+import React, {useEffect} from "react";
+import {View, Text, FlatList} from 'react-native';
+import { useRoute } from '@react-navigation/native';
+
+import albumDetails from "../data/albumDetails";
+import SongListItem from "../components/SongListItem";
+
+
+const  AlbumScreen = () => {
+
+    const  route = useRoute();
+
+    useEffect(() => {
+        console.log(route);
+    }, [])
+
+    return (
+        <View>
+            <FlatList
+                data={albumDetails.songs}
+                renderItem={({ item }) => <SongListItem song={item} />}
+                keyExtractor={(item) => item.id}
+            />
+        </View>
+    )
+}
+
+export default AlbumScreen;
Index: screens/NotFoundScreen.tsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import { StackScreenProps } from '@react-navigation/stack';\nimport * as React from 'react';\nimport { StyleSheet, Text, TouchableOpacity, View } from 'react-native';\n\nimport { RootStackParamList } from '../types';\n\nexport default function NotFoundScreen({\n  navigation,\n}: StackScreenProps<RootStackParamList, 'NotFound'>) {\n  return (\n    <View style={styles.container}>\n      <Text style={styles.title}>This screen doesn't exist.</Text>\n      <TouchableOpacity onPress={() => navigation.replace('Root')} style={styles.link}>\n        <Text style={styles.linkText}>Go to home screen!</Text>\n      </TouchableOpacity>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: 20,\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: 'bold',\n  },\n  link: {\n    marginTop: 15,\n    paddingVertical: 15,\n  },\n  linkText: {\n    fontSize: 14,\n    color: '#2e78b7',\n  },\n});\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/screens/NotFoundScreen.tsx b/screens/NotFoundScreen.tsx
--- a/screens/NotFoundScreen.tsx	(revision 77c7f1c0864b0cc0d2026967db41e1d8235ea3c5)
+++ b/screens/NotFoundScreen.tsx	(date 1611634897855)
@@ -8,33 +8,6 @@
   navigation,
 }: StackScreenProps<RootStackParamList, 'NotFound'>) {
   return (
-    <View style={styles.container}>
-      <Text style={styles.title}>This screen doesn't exist.</Text>
-      <TouchableOpacity onPress={() => navigation.replace('Root')} style={styles.link}>
-        <Text style={styles.linkText}>Go to home screen!</Text>
-      </TouchableOpacity>
-    </View>
+    <Text>Hello Home</Text>
   );
 }
-
-const styles = StyleSheet.create({
-  container: {
-    flex: 1,
-    backgroundColor: '#fff',
-    alignItems: 'center',
-    justifyContent: 'center',
-    padding: 20,
-  },
-  title: {
-    fontSize: 20,
-    fontWeight: 'bold',
-  },
-  link: {
-    marginTop: 15,
-    paddingVertical: 15,
-  },
-  linkText: {
-    fontSize: 14,
-    color: '#2e78b7',
-  },
-});
Index: screens/HomeScreen.tsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import * as React from 'react';\nimport { StyleSheet } from 'react-native';\n\nimport EditScreenInfo from '../components/EditScreenInfo';\nimport { Text, View } from '../components/Themed';\n\nexport default function TabOneScreen() {\n  return (\n    <View style={styles.container}>\n      <Text style={styles.title}>Tab One</Text>\n      <View style={styles.separator} lightColor=\"#eee\" darkColor=\"rgba(255,255,255,0.1)\" />\n      <EditScreenInfo path=\"/screens/TabOneScreen.tsx\" />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: 'bold',\n  },\n  separator: {\n    marginVertical: 30,\n    height: 1,\n    width: '80%',\n  },\n});\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/screens/HomeScreen.tsx b/screens/HomeScreen.tsx
--- a/screens/HomeScreen.tsx	(revision 77c7f1c0864b0cc0d2026967db41e1d8235ea3c5)
+++ b/screens/HomeScreen.tsx	(date 1611635370117)
@@ -1,19 +1,28 @@
 import * as React from 'react';
-import { StyleSheet } from 'react-native';
+import { StyleSheet, FlatList, View } from 'react-native';
 
-import EditScreenInfo from '../components/EditScreenInfo';
-import { Text, View } from '../components/Themed';
+import AlbumCategory from '../components/AlbumCategory';
+import albumCategories from "../data/albumCategories";
 
-export default function TabOneScreen() {
+
+export default function HomeScreen() {
   return (
     <View style={styles.container}>
-      <Text style={styles.title}>Tab One</Text>
-      <View style={styles.separator} lightColor="#eee" darkColor="rgba(255,255,255,0.1)" />
-      <EditScreenInfo path="/screens/TabOneScreen.tsx" />
+      <FlatList
+        data={ albumCategories }
+        renderItem={({ item }) => (
+            <AlbumCategory
+                title={item.title}
+                albums={item.albums}
+            />
+            )}
+        keyExtractor = {(item) => item.id}
+        />
     </View>
   );
 }
 
+
 const styles = StyleSheet.create({
   container: {
     flex: 1,
@@ -30,3 +39,4 @@
     width: '80%',
   },
 });
+
Index: app.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>{\n  \"expo\": {\n    \"name\": \"spotifyCloneReact\",\n    \"slug\": \"spotifyCloneReact\",\n    \"version\": \"1.0.0\",\n    \"orientation\": \"portrait\",\n    \"icon\": \"./assets/images/icon.png\",\n    \"scheme\": \"myapp\",\n    \"userInterfaceStyle\": \"automatic\",\n    \"splash\": {\n      \"image\": \"./assets/images/splash.png\",\n      \"resizeMode\": \"contain\",\n      \"backgroundColor\": \"#ffffff\"\n    },\n    \"updates\": {\n      \"fallbackToCacheTimeout\": 0\n    },\n    \"assetBundlePatterns\": [\n      \"**/*\"\n    ],\n    \"ios\": {\n      \"supportsTablet\": true\n    },\n    \"android\": {\n      \"adaptiveIcon\": {\n        \"foregroundImage\": \"./assets/images/adaptive-icon.png\",\n        \"backgroundColor\": \"#FFFFFF\"\n      }\n    },\n    \"web\": {\n      \"favicon\": \"./assets/images/favicon.png\"\n    }\n  }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app.json b/app.json
--- a/app.json	(revision 77c7f1c0864b0cc0d2026967db41e1d8235ea3c5)
+++ b/app.json	(date 1611634897875)
@@ -6,7 +6,7 @@
     "orientation": "portrait",
     "icon": "./assets/images/icon.png",
     "scheme": "myapp",
-    "userInterfaceStyle": "automatic",
+    "userInterfaceStyle": "dark",
     "splash": {
       "image": "./assets/images/splash.png",
       "resizeMode": "contain",
Index: components/AlbumCategory/styles.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/components/AlbumCategory/styles.ts b/components/AlbumCategory/styles.ts
--- a/components/AlbumCategory/styles.ts	(revision 77c7f1c0864b0cc0d2026967db41e1d8235ea3c5)
+++ b/components/AlbumCategory/styles.ts	(date 1611634897887)
@@ -1,0 +1,16 @@
+import { StyleSheet} from "react-native";
+
+const styles = StyleSheet.create({
+    container: {
+        margin: 10,
+    },
+
+    title: {
+        color: 'white',
+        fontSize: 30,
+        fontWeight: 'bold',
+        margin: 10
+    }
+});
+
+export default styles;
Index: components/AlbumCategory/index.tsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/components/AlbumCategory/index.tsx b/components/AlbumCategory/index.tsx
--- a/components/AlbumCategory/index.tsx	(revision 77c7f1c0864b0cc0d2026967db41e1d8235ea3c5)
+++ b/components/AlbumCategory/index.tsx	(date 1611634897902)
@@ -1,0 +1,28 @@
+import React from "react";
+import { View, Text, FlatList } from 'react-native';
+import { Album } from "../../types";
+import styles from "./styles";
+import AlbumComponent from "../Album";
+
+export type AlbumCategoryProps = {
+    title: string,
+    albums: [Album],
+}
+
+const  AlbumCategory = (props: AlbumCategoryProps) => (
+    <View style={styles.container}>
+        {/*Title of category*/}
+        <Text style={styles.title}>{props.title}</Text>
+
+        {/*List of albums*/}
+        <FlatList
+            data={props.albums}
+            renderItem={({ item }) => <AlbumComponent album={item} />}
+            keyExtractor={( item ) => item.id}
+            horizontal={true}
+            showsHorizontalScrollIndicator={false}
+        />
+    </View>
+)
+
+export default AlbumCategory;
Index: components/Album/styles.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/components/Album/styles.ts b/components/Album/styles.ts
--- a/components/Album/styles.ts	(revision 77c7f1c0864b0cc0d2026967db41e1d8235ea3c5)
+++ b/components/Album/styles.ts	(date 1611634897907)
@@ -1,0 +1,18 @@
+import { StyleSheet} from "react-native";
+
+const  styles = StyleSheet.create({
+    container: {
+        width: 140,
+        margin: 10,
+    },
+    image: {
+        width: '100%',
+        height: 140,
+    },
+    text: {
+        color: 'grey',
+        marginTop: 10,
+    }
+})
+
+export default styles;
Index: navigation/BottomTabNavigator.tsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import { Ionicons } from '@expo/vector-icons';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport * as React from 'react';\n\nimport Colors from '../constants/Colors';\nimport useColorScheme from '../hooks/useColorScheme';\nimport TabOneScreen from '../screens/TabOneScreen';\nimport TabTwoScreen from '../screens/TabTwoScreen';\nimport { BottomTabParamList, TabOneParamList, TabTwoParamList } from '../types';\n\nconst BottomTab = createBottomTabNavigator<BottomTabParamList>();\n\nexport default function BottomTabNavigator() {\n  const colorScheme = useColorScheme();\n\n  return (\n    <BottomTab.Navigator\n      initialRouteName=\"TabOne\"\n      tabBarOptions={{ activeTintColor: Colors[colorScheme].tint }}>\n      <BottomTab.Screen\n        name=\"TabOne\"\n        component={TabOneNavigator}\n        options={{\n          tabBarIcon: ({ color }) => <TabBarIcon name=\"ios-code\" color={color} />,\n        }}\n      />\n      <BottomTab.Screen\n        name=\"TabTwo\"\n        component={TabTwoNavigator}\n        options={{\n          tabBarIcon: ({ color }) => <TabBarIcon name=\"ios-code\" color={color} />,\n        }}\n      />\n    </BottomTab.Navigator>\n  );\n}\n\n// You can explore the built-in icon families and icons on the web at:\n// https://icons.expo.fyi/\nfunction TabBarIcon(props: { name: React.ComponentProps<typeof Ionicons>['name']; color: string }) {\n  return <Ionicons size={30} style={{ marginBottom: -3 }} {...props} />;\n}\n\n// Each tab has its own navigation stack, you can read more about this pattern here:\n// https://reactnavigation.org/docs/tab-based-navigation#a-stack-navigator-for-each-tab\nconst TabOneStack = createStackNavigator<TabOneParamList>();\n\nfunction TabOneNavigator() {\n  return (\n    <TabOneStack.Navigator>\n      <TabOneStack.Screen\n        name=\"TabOneScreen\"\n        component={TabOneScreen}\n        options={{ headerTitle: 'Tab One Title' }}\n      />\n    </TabOneStack.Navigator>\n  );\n}\n\nconst TabTwoStack = createStackNavigator<TabTwoParamList>();\n\nfunction TabTwoNavigator() {\n  return (\n    <TabTwoStack.Navigator>\n      <TabTwoStack.Screen\n        name=\"TabTwoScreen\"\n        component={TabTwoScreen}\n        options={{ headerTitle: 'Tab Two Title' }}\n      />\n    </TabTwoStack.Navigator>\n  );\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/navigation/BottomTabNavigator.tsx b/navigation/BottomTabNavigator.tsx
--- a/navigation/BottomTabNavigator.tsx	(revision 77c7f1c0864b0cc0d2026967db41e1d8235ea3c5)
+++ b/navigation/BottomTabNavigator.tsx	(date 1611643867787)
@@ -1,13 +1,14 @@
-import { Ionicons } from '@expo/vector-icons';
+import { Ionicons, Entypo, EvilIcons, MaterialCommunityIcons, FontAwesome5, MaterialIcons } from '@expo/vector-icons';
 import { createBottomTabNavigator } from '@react-navigation/bottom-tabs';
 import { createStackNavigator } from '@react-navigation/stack';
 import * as React from 'react';
 
 import Colors from '../constants/Colors';
 import useColorScheme from '../hooks/useColorScheme';
-import TabOneScreen from '../screens/TabOneScreen';
+import HomeScreen from '../screens/HomeScreen.tsx';
 import TabTwoScreen from '../screens/TabTwoScreen';
 import { BottomTabParamList, TabOneParamList, TabTwoParamList } from '../types';
+import AlbumScreen from "../screens/AlbumScreen";
 
 const BottomTab = createBottomTabNavigator<BottomTabParamList>();
 
@@ -19,28 +20,37 @@
       initialRouteName="TabOne"
       tabBarOptions={{ activeTintColor: Colors[colorScheme].tint }}>
       <BottomTab.Screen
-        name="TabOne"
+        name="Home"
         component={TabOneNavigator}
         options={{
-          tabBarIcon: ({ color }) => <TabBarIcon name="ios-code" color={color} />,
+          tabBarIcon: ({ color }) => <Entypo name="home" size={30} style={{ marginBottom: -3}} color={color}/>,
+        }}
+      />
+      <BottomTab.Screen
+        name="Search"
+        component={TabTwoNavigator}
+        options={{
+          tabBarIcon: ({ color }) => <EvilIcons name="search" size={30} style={{ marginBottom: -3 }} color={color}/>,
         }}
       />
       <BottomTab.Screen
-        name="TabTwo"
-        component={TabTwoNavigator}
-        options={{
-          tabBarIcon: ({ color }) => <TabBarIcon name="ios-code" color={color} />,
-        }}
+          name="Your Lirary"
+          component={TabTwoNavigator}
+          options={{
+              tabBarIcon: ({ color }) => <MaterialIcons name="library-music" size={30} style={{ marginBottom: -3 }} color={color}/>,
+          }}
+      />
+      <BottomTab.Screen
+          name="Premium"
+          component={TabTwoNavigator}
+          options={{
+              tabBarIcon: ({ color }) => <FontAwesome5 name="spotify" size={30} style={{ marginBottom: -3 }} color={color}/>,
+          }}
       />
     </BottomTab.Navigator>
   );
 }
 
-// You can explore the built-in icon families and icons on the web at:
-// https://icons.expo.fyi/
-function TabBarIcon(props: { name: React.ComponentProps<typeof Ionicons>['name']; color: string }) {
-  return <Ionicons size={30} style={{ marginBottom: -3 }} {...props} />;
-}
 
 // Each tab has its own navigation stack, you can read more about this pattern here:
 // https://reactnavigation.org/docs/tab-based-navigation#a-stack-navigator-for-each-tab
@@ -51,9 +61,15 @@
     <TabOneStack.Navigator>
       <TabOneStack.Screen
         name="TabOneScreen"
-        component={TabOneScreen}
-        options={{ headerTitle: 'Tab One Title' }}
+        component={HomeScreen}
+        options={{ headerTitle: 'Home' }}
       />
+
+        <TabOneStack.Screen
+            name="AlbumScreen"
+            component={AlbumScreen}
+            options={{ headerTitle: 'Album' }}
+        />
     </TabOneStack.Navigator>
   );
 }
Index: components/SongListItem/styles.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/components/SongListItem/styles.ts b/components/SongListItem/styles.ts
--- a/components/SongListItem/styles.ts	(revision 77c7f1c0864b0cc0d2026967db41e1d8235ea3c5)
+++ b/components/SongListItem/styles.ts	(date 1611647320447)
@@ -1,0 +1,30 @@
+import { StyleSheet } from "react-native";
+
+const styles = StyleSheet.create({
+    container: {
+        flexDirection: 'row',
+        margin: 15,
+    },
+
+    image: {
+        width: 75,
+        height: 75,
+    },
+
+    rightContainer: {
+        justifyContent: 'space-around',
+        marginLeft: 15
+    },
+
+    title: {
+        color: 'white',
+        fontSize: 24,
+    },
+
+    artist: {
+        color: 'lightgray',
+        fontSize: 20,
+    }
+})
+
+export default styles;
Index: components/Album/index.tsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/components/Album/index.tsx b/components/Album/index.tsx
--- a/components/Album/index.tsx	(revision 77c7f1c0864b0cc0d2026967db41e1d8235ea3c5)
+++ b/components/Album/index.tsx	(date 1611644587995)
@@ -1,0 +1,32 @@
+import React from "react";
+import { View, Image, Text, TouchableWithoutFeedback, } from 'react-native';
+import { useNavigation } from '@react-navigation/native';
+import styles from './styles';
+import { Album } from "../../types";
+
+export type AlbumProps = {
+    album: Album,
+}
+
+const AlbumComponent = (props: AlbumProps) => {
+
+    const navigation = useNavigation();
+
+    const onPress = () => {
+        navigation.navigate('AlbumScreen', { id: props.album.id })
+    }
+
+    return (
+        <TouchableWithoutFeedback onPress={onPress}>
+            <View style={styles.container}>
+                {/*Image of the album*/}
+                <Image source={{uri: props.album.imageUri}} style={styles.image}/>
+                <Text style={styles.text}>{props.album.artistsHeadline}</Text>
+
+                {/*Artists headline*/}
+            </View>
+        </TouchableWithoutFeedback>
+    )
+}
+
+export default AlbumComponent;
Index: components/SongListItem/index.tsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/components/SongListItem/index.tsx b/components/SongListItem/index.tsx
--- a/components/SongListItem/index.tsx	(revision 77c7f1c0864b0cc0d2026967db41e1d8235ea3c5)
+++ b/components/SongListItem/index.tsx	(date 1611647113209)
@@ -1,0 +1,28 @@
+import React from "react";
+import { Text, Image, View } from 'react-native';
+
+import styles from './styles';
+import {Song} from "../../types";
+
+export type SongListItemProps = {
+    song: Song
+}
+
+const SongListItem = (props: SongListItemProps) => {
+    const { song } = props;
+    return (
+        <View style={styles.container}>
+            {/*Image cover*/}
+            <Image source={{ uri: song.imageUri }} style={styles.image} />
+            <View style={styles.rightContainer}>
+                {/*Title*/}
+                <Text style={styles.title}>{song.title}</Text>
+
+                {/*Artist*/}
+                <Text style={styles.artist}>{song.artist}</Text>
+            </View>
+        </View>
+    )
+}
+
+export default SongListItem;
Index: types.tsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>export type RootStackParamList = {\n  Root: undefined;\n  NotFound: undefined;\n};\n\nexport type BottomTabParamList = {\n  TabOne: undefined;\n  TabTwo: undefined;\n};\n\nexport type TabOneParamList = {\n  TabOneScreen: undefined;\n};\n\nexport type TabTwoParamList = {\n  TabTwoScreen: undefined;\n};\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/types.tsx b/types.tsx
--- a/types.tsx	(revision 77c7f1c0864b0cc0d2026967db41e1d8235ea3c5)
+++ b/types.tsx	(date 1611646546337)
@@ -10,8 +10,22 @@
 
 export type TabOneParamList = {
   TabOneScreen: undefined;
+  AlbumScreen: undefined;
 };
 
 export type TabTwoParamList = {
   TabTwoScreen: undefined;
 };
+
+export type  Album = {
+  id: string;
+  imageUri: string;
+  artistsHeadline: string;
+}
+
+export type Song = {
+  id: string,
+  imageUri: string,
+  title: string,
+  artist: string,
+}
